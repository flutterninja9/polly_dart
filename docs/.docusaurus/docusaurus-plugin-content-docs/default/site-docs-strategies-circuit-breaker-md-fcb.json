{
  "id": "strategies/circuit-breaker",
  "title": "Circuit Breaker Strategy",
  "description": "The Circuit Breaker Strategy protects your application from cascading failures by monitoring the health of external dependencies and temporarily blocking calls when they're failing. Like an electrical circuit breaker, it \"opens\" to stop the flow when problems are detected.",
  "source": "@site/docs/strategies/circuit-breaker.md",
  "sourceDirName": "strategies",
  "slug": "/strategies/circuit-breaker",
  "permalink": "/strategies/circuit-breaker",
  "draft": false,
  "unlisted": false,
  "editUrl": "https://github.com/flutterninja9/polly_dart/tree/main/docs/docs/strategies/circuit-breaker.md",
  "tags": [],
  "version": "current",
  "sidebarPosition": 3,
  "frontMatter": {
    "sidebar_position": 3
  },
  "sidebar": "tutorialSidebar",
  "previous": {
    "title": "Retry Strategy",
    "permalink": "/strategies/retry"
  },
  "next": {
    "title": "Timeout Strategy",
    "permalink": "/strategies/timeout"
  }
}